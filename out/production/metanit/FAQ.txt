/////Коммантарии и общая структура/////

/*
    многострочный комментарий
    Объявление нового класса,
    который содержит код программы
*/

public class Program{   // начало объявления класса Program

    // определение метода main
    public static void main (String args[]){    // объявление нового метода

         System.out.println("Hello Java!");     // вывод строки на консоль
    }   // конец объявления нового метода
} // конец объявления класса Program

-------------------------------------------------------------------------
/////Переменные://///

Структура объявления переменных:
    тип_данных имя_переменной   // объявление переменной
Ограничения для имени переменной:
    * Имя переменной не может начинаться с цифры
    * Нет знаков пунктуации и пробелов
    * Не может быть ключевым словом языка Java
    * Регистрозависимость: int num != int NUM
Пример:
    Объявление одной переменной
        int x = 10; // объявили тип и имя переменной
        System.out.println(x); // вывели значение переменно = 10
    Объявление нескольких переменных
        int x = 10, y = 15;
        System.out.print(x);
        System.out.print(y);
В процессе выполнения кода, можно изменять переменные.
Пример:
    int x = 10; // объявили переменную
    System.out.println(x); // вывели первое присвоенное значение переменной = 10
    x = 25; // изменили ранее присвоенное значение переменной
    System.out.println(x); // вывели уже новое значение переменной = 25
При объявлении переменной через var, тип для нее выводится автоматически,
в зависимости от значения, которое ей присваивается
Пример:
    var x = 10; // значит, var = int
-------------------------------------------------------------------------
/////Константы://///

Отличия констант от переменных:
    * Значение присваивается один раз и навсегда
    * В начале идет ключевое слово final
    * Имя константы, как правило, в верхнем регистре
Пример:
    final int LIMIT = 5;
    System.out.print(LIMIT); // вывели значение константы = 5
-------------------------------------------------------------------------
/////Типы данных://///

    * boolean: хранит значение true или false
    * byte: хранит целое число от -128 до 127
    * short: хранит целое число от -32768 до 32767
    * int: хранит целое число от -2147483648 до 2147483647
    * long: хранит целое число от –9 223 372 036 854 775 808 до 9 223 372 036 854 775 807
    * double: хранит число с плавающей точкой (больше, чем float)
    * float: хранит число с плавающей точкой (меньше, чем double)
    * char: хранит одиночный символ в кодировке UTF-16. Диапазон хранимых значений от 0 до 65535

/////Целые числа://///

    Все целочисленные значения воспринимаются как int.
    Чтобы система поняла, что переменной присвоено значение типа, отличного от int,
    необходимо к числу дописать суффикс l
        Пример:
            * long num = 2147483649L;

/////Числа с плавающей запятой/////

    Все значения с плавающей запятой, система воспринимает как double.
    Чтобы система поняла, что тип переменной float, необходимо к числу дописать суффикс f
        Пример:
            * float fl = 30.6f;

/////Символы и строки/////

    'a' - символьный тип (char)
    "а" - строковый тип (string)
        'a' != "a"
-------------------------------------------------------------------------
/////Консольный ввод/вывод в Java://///

Для взаимодействия с консолью в Java применяется класс System

/////Вывод в консоль/////

Для вывода в классе System определен объект out, в котором определен метод println
    println - Выводит информацию с переносом строки
    print - Выводит информацию в одну строку
    printf - Выводит ворматированную строку, подставляя в неё значение спецификатора (Например:%d)
        Пример:
            System.out.print("Hello world!");

Подстановка в выводимую строку данных:
    Пример:
        public class Program {
            public static void main(String[] args) {
                int x = 5;
                int y = 6;
                // Ниже использован специйикатор %d, который примет первое, затем второе значение
                System.out.printf("x=%d; y=%d \n", x, y);
            }
        }

Виды спецификаторов:
    %d - для вывода целочисленных значений
    %f - для вывода чисел с плавающей запятой
    %с - для вывода одиночного символа
    %s - для вывода строкового значения
        Пример:
        // Выведет Name: Tom  Age: 30  Height: 1,70
            System.out.printf("Name: %s  Age: %d  Height: %.2f \n", name, age, height);

/////Ввод с консоли/////

* Для ввода чаще используют класс Scanner, который использует System.in
* Для использования класса Scanner необходимо импортировать его из пакета java.util.Scanner
* Для получения введенного значения, необходимо указать соответствующий метод:
    * next(): считывает введенную строку до первого пробела
    * nextLine(): считывает всю введенную строку
    * nextInt(): считывает введенное число int
    * nextDouble(): считывает введенное число double
    * nextBoolean(): считывает значение boolean
    * nextByte(): считывает введенное число byte
    * nextFloat(): считывает введенное число float
    * nextShort(): считывает введенное число short
        Пример в файле: input_in_console

-------------------------------------------------------------------------
/////Арифметические операции/////

